[
  {
    "name": "Element#appendChild",
    "filePath": "src/Element.js",
    "lines": [
      {
        "lineNumber": 263,
        "line": "  /**"
      },
      {
        "lineNumber": 264,
        "line": "   * Append different types of children."
      },
      {
        "lineNumber": 265,
        "line": "   *"
      },
      {
        "lineNumber": 266,
        "line": "   * @param child"
      },
      {
        "lineNumber": 267,
        "line": "   */"
      },
      {
        "lineNumber": 268,
        "line": "  appendChild(element, child) {"
      }
    ],
    "codeParams": [
      "element",
      "child"
    ],
    "docParams": [
      "child"
    ]
  },
  {
    "name": "Webform#showErrors",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 841,
        "line": "  /**"
      },
      {
        "lineNumber": 842,
        "line": "   * Show the errors of this form within the alert dialog."
      },
      {
        "lineNumber": 843,
        "line": "   *"
      },
      {
        "lineNumber": 844,
        "line": "   * @param {Object} error - An optional additional error to display along with the component errors."
      },
      {
        "lineNumber": 845,
        "line": "   * @returns {*}"
      },
      {
        "lineNumber": 846,
        "line": "   */"
      },
      {
        "lineNumber": 847,
        "line": "  showErrors(error, triggerEvent) {"
      }
    ],
    "codeParams": [
      "error",
      "triggerEvent"
    ],
    "docParams": [
      "error"
    ]
  },
  {
    "name": "Webform#onChange",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 920,
        "line": "  /**"
      },
      {
        "lineNumber": 921,
        "line": "   * Trigger the change event for this form."
      },
      {
        "lineNumber": 922,
        "line": "   *"
      },
      {
        "lineNumber": 923,
        "line": "   * @param changed"
      },
      {
        "lineNumber": 924,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 925,
        "line": "   */"
      },
      {
        "lineNumber": 926,
        "line": "  onChange(flags, changed) {"
      }
    ],
    "codeParams": [
      "flags",
      "changed"
    ],
    "docParams": [
      "changed",
      "flags"
    ]
  },
  {
    "name": "Webform#submit",
    "filePath": "src/Webform.js",
    "lines": [
      {
        "lineNumber": 1042,
        "line": "  /**"
      },
      {
        "lineNumber": 1043,
        "line": "   * Submits the form."
      },
      {
        "lineNumber": 1044,
        "line": "   *"
      },
      {
        "lineNumber": 1045,
        "line": "   * @example"
      },
      {
        "lineNumber": 1046,
        "line": "   * import Webform from 'formiojs/Webform';"
      },
      {
        "lineNumber": 1047,
        "line": "   * let form = new Webform(document.getElementById('formio'));"
      },
      {
        "lineNumber": 1048,
        "line": "   * form.src = 'https://examples.form.io/example';"
      },
      {
        "lineNumber": 1049,
        "line": "   * form.submission = {data: {"
      },
      {
        "lineNumber": 1050,
        "line": "   *   firstName: 'Joe',"
      },
      {
        "lineNumber": 1051,
        "line": "   *   lastName: 'Smith',"
      },
      {
        "lineNumber": 1052,
        "line": "   *   email: 'joe@example.com'"
      },
      {
        "lineNumber": 1053,
        "line": "   * }};"
      },
      {
        "lineNumber": 1054,
        "line": "   * form.submit().then((submission) => {"
      },
      {
        "lineNumber": 1055,
        "line": "   *   console.log(submission);"
      },
      {
        "lineNumber": 1056,
        "line": "   * });"
      },
      {
        "lineNumber": 1057,
        "line": "   *"
      },
      {
        "lineNumber": 1058,
        "line": "   * @param {boolean} before - If this submission occured from the before handlers."
      },
      {
        "lineNumber": 1059,
        "line": "   *"
      },
      {
        "lineNumber": 1060,
        "line": "   * @returns {Promise} - A promise when the form is done submitting."
      },
      {
        "lineNumber": 1061,
        "line": "   */"
      },
      {
        "lineNumber": 1062,
        "line": "  submit(before, options) {"
      }
    ],
    "codeParams": [
      "before",
      "options"
    ],
    "docParams": [
      "before"
    ]
  },
  {
    "name": "Component#renderString",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 568,
        "line": "  /**"
      },
      {
        "lineNumber": 569,
        "line": "   * Render a template string into html."
      },
      {
        "lineNumber": 570,
        "line": "   *"
      },
      {
        "lineNumber": 571,
        "line": "   * @param template"
      },
      {
        "lineNumber": 572,
        "line": "   * @param data"
      },
      {
        "lineNumber": 573,
        "line": "   * @param actions"
      },
      {
        "lineNumber": 574,
        "line": "   *"
      },
      {
        "lineNumber": 575,
        "line": "   * @return {HTMLElement} - The created element."
      },
      {
        "lineNumber": 576,
        "line": "   */"
      },
      {
        "lineNumber": 577,
        "line": "  renderString(template, data) {"
      }
    ],
    "codeParams": [
      "template",
      "data"
    ],
    "docParams": [
      "template",
      "data",
      "actions"
    ]
  },
  {
    "name": "Component#updateValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1482,
        "line": "  /**"
      },
      {
        "lineNumber": 1483,
        "line": "   * Update a value of this component."
      },
      {
        "lineNumber": 1484,
        "line": "   *"
      },
      {
        "lineNumber": 1485,
        "line": "   * @param flags"
      },
      {
        "lineNumber": 1486,
        "line": "   */"
      },
      {
        "lineNumber": 1487,
        "line": "  updateValue(flags, value) {"
      }
    ],
    "codeParams": [
      "flags",
      "value"
    ],
    "docParams": [
      "flags"
    ]
  },
  {
    "name": "Component#calculateValue",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1552,
        "line": "  /**"
      },
      {
        "lineNumber": 1553,
        "line": "   * Perform a calculated value operation."
      },
      {
        "lineNumber": 1554,
        "line": "   *"
      },
      {
        "lineNumber": 1555,
        "line": "   * @param data - The global data object."
      },
      {
        "lineNumber": 1556,
        "line": "   *"
      },
      {
        "lineNumber": 1557,
        "line": "   * @return {boolean} - If the value changed during calculation."
      },
      {
        "lineNumber": 1558,
        "line": "   */"
      },
      {
        "lineNumber": 1559,
        "line": "  calculateValue(data, flags) {"
      }
    ],
    "codeParams": [
      "data",
      "flags"
    ],
    "docParams": [
      "data"
    ]
  },
  {
    "name": "Component#invalidMessage",
    "filePath": "src/components/_classes/component/Component.js",
    "lines": [
      {
        "lineNumber": 1602,
        "line": "  /**"
      },
      {
        "lineNumber": 1603,
        "line": "   * Returns the invalid message, or empty string if the component is valid."
      },
      {
        "lineNumber": 1604,
        "line": "   *"
      },
      {
        "lineNumber": 1605,
        "line": "   * @param data"
      },
      {
        "lineNumber": 1606,
        "line": "   * @param dirty"
      },
      {
        "lineNumber": 1607,
        "line": "   * @return {*}"
      },
      {
        "lineNumber": 1608,
        "line": "   */"
      },
      {
        "lineNumber": 1609,
        "line": "  invalidMessage(data, dirty, ignoreCondition) {"
      }
    ],
    "codeParams": [
      "data",
      "dirty",
      "ignoreCondition"
    ],
    "docParams": [
      "data",
      "dirty"
    ]
  },
  {
    "name": "NestedComponent#createComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 172,
        "line": "  /**"
      },
      {
        "lineNumber": 173,
        "line": "   * Create a new component and add it to the components array."
      },
      {
        "lineNumber": 174,
        "line": "   *"
      },
      {
        "lineNumber": 175,
        "line": "   * @param component"
      },
      {
        "lineNumber": 176,
        "line": "   * @param data"
      },
      {
        "lineNumber": 177,
        "line": "   */"
      },
      {
        "lineNumber": 178,
        "line": "  createComponent(component, options, data, before) {"
      }
    ],
    "codeParams": [
      "component",
      "options",
      "data",
      "before"
    ],
    "docParams": [
      "component",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponents",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 226,
        "line": "  /**"
      },
      {
        "lineNumber": 227,
        "line": "   *"
      },
      {
        "lineNumber": 228,
        "line": "   * @param element"
      },
      {
        "lineNumber": 229,
        "line": "   * @param data"
      },
      {
        "lineNumber": 230,
        "line": "   */"
      },
      {
        "lineNumber": 231,
        "line": "  addComponents(data, options) {"
      }
    ],
    "codeParams": [
      "data",
      "options"
    ],
    "docParams": [
      "element",
      "data"
    ]
  },
  {
    "name": "NestedComponent#addComponent",
    "filePath": "src/components/_classes/nested/NestedComponent.js",
    "lines": [
      {
        "lineNumber": 243,
        "line": "  /**"
      },
      {
        "lineNumber": 244,
        "line": "   * Add a new component to the components array."
      },
      {
        "lineNumber": 245,
        "line": "   *"
      },
      {
        "lineNumber": 246,
        "line": "   * @param {Object} component - The component JSON schema to add."
      },
      {
        "lineNumber": 247,
        "line": "   * @param {Object} data - The submission data object to house the data for this component."
      },
      {
        "lineNumber": 248,
        "line": "   * @param {HTMLElement} before - A DOM element to insert this element before."
      },
      {
        "lineNumber": 249,
        "line": "   * @return {Component} - The created component instance."
      },
      {
        "lineNumber": 250,
        "line": "   */"
      },
      {
        "lineNumber": 251,
        "line": "  addComponent(component, data, before, noAdd) {"
      }
    ],
    "codeParams": [
      "component",
      "data",
      "before",
      "noAdd"
    ],
    "docParams": [
      "component",
      "data",
      "before"
    ]
  },
  {
    "name": "FormComponent#filterSubForm",
    "filePath": "src/components/form/Form.js",
    "lines": [
      {
        "lineNumber": 184,
        "line": "  /**"
      },
      {
        "lineNumber": 185,
        "line": "   * Filter a subform to ensure all submit button components are hidden."
      },
      {
        "lineNumber": 186,
        "line": "   *"
      },
      {
        "lineNumber": 187,
        "line": "   * @param form"
      },
      {
        "lineNumber": 188,
        "line": "   * @param options"
      },
      {
        "lineNumber": 189,
        "line": "   */"
      },
      {
        "lineNumber": 190,
        "line": "  filterSubForm() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "form",
      "options"
    ]
  },
  {
    "name": "SelectComponent#addOption",
    "filePath": "src/components/select/Select.js",
    "lines": [
      {
        "lineNumber": 124,
        "line": "  /**"
      },
      {
        "lineNumber": 125,
        "line": "   * Adds an option to the select dropdown."
      },
      {
        "lineNumber": 126,
        "line": "   *"
      },
      {
        "lineNumber": 127,
        "line": "   * @param value"
      },
      {
        "lineNumber": 128,
        "line": "   * @param label"
      },
      {
        "lineNumber": 129,
        "line": "   */"
      },
      {
        "lineNumber": 130,
        "line": "  addOption(value, label, attrs = {}) {"
      }
    ],
    "codeParams": [
      "value",
      "label",
      "attrs"
    ],
    "docParams": [
      "value",
      "label"
    ]
  },
  {
    "name": "getComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 137,
        "line": "/**"
      },
      {
        "lineNumber": 138,
        "line": " * Get a component by its key"
      },
      {
        "lineNumber": 139,
        "line": " *"
      },
      {
        "lineNumber": 140,
        "line": " * @param {Object} components"
      },
      {
        "lineNumber": 141,
        "line": " *   The components to iterate."
      },
      {
        "lineNumber": 142,
        "line": " * @param {String|Object} key"
      },
      {
        "lineNumber": 143,
        "line": " *   The key of the component to get, or a query of the component to search."
      },
      {
        "lineNumber": 144,
        "line": " *"
      },
      {
        "lineNumber": 145,
        "line": " * @returns {Object}"
      },
      {
        "lineNumber": 146,
        "line": " *   The component that matches the given key, or undefined if not found."
      },
      {
        "lineNumber": 147,
        "line": " */"
      },
      {
        "lineNumber": 148,
        "line": "export function getComponent(components, key, includeAll) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "includeAll"
    ],
    "docParams": [
      "components",
      "key"
    ]
  },
  {
    "name": "findComponent",
    "filePath": "src/utils/formUtils.js",
    "lines": [
      {
        "lineNumber": 190,
        "line": "/**"
      },
      {
        "lineNumber": 191,
        "line": " * This function will find a component in a form and return the component AND THE PATH to the component in the form."
      },
      {
        "lineNumber": 192,
        "line": " *"
      },
      {
        "lineNumber": 193,
        "line": " * @param components"
      },
      {
        "lineNumber": 194,
        "line": " * @param key"
      },
      {
        "lineNumber": 195,
        "line": " * @param fn"
      },
      {
        "lineNumber": 196,
        "line": " * @param path"
      },
      {
        "lineNumber": 197,
        "line": " * @returns {*}"
      },
      {
        "lineNumber": 198,
        "line": " */"
      },
      {
        "lineNumber": 199,
        "line": "export function findComponent(components, key, path, fn) {"
      }
    ],
    "codeParams": [
      "components",
      "key",
      "path",
      "fn"
    ],
    "docParams": [
      "components",
      "key",
      "fn",
      "path"
    ]
  },
  {
    "name": "evaluate",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 34,
        "line": "/**"
      },
      {
        "lineNumber": 35,
        "line": " * Evaluate a method."
      },
      {
        "lineNumber": 36,
        "line": " *"
      },
      {
        "lineNumber": 37,
        "line": " * @param func"
      },
      {
        "lineNumber": 38,
        "line": " * @param args"
      },
      {
        "lineNumber": 39,
        "line": " * @return {*}"
      },
      {
        "lineNumber": 40,
        "line": " */"
      },
      {
        "lineNumber": 41,
        "line": "export function evaluate(func, args, ret, tokenize) {"
      }
    ],
    "codeParams": [
      "func",
      "args",
      "ret",
      "tokenize"
    ],
    "docParams": [
      "func",
      "args"
    ]
  },
  {
    "name": "checkCalculated",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 162,
        "line": "/**"
      },
      {
        "lineNumber": 163,
        "line": " * Checks the calculated value for a provided component and data."
      },
      {
        "lineNumber": 164,
        "line": " *"
      },
      {
        "lineNumber": 165,
        "line": " * @param {Object} component"
      },
      {
        "lineNumber": 166,
        "line": " *   The component to check for the calculated value."
      },
      {
        "lineNumber": 167,
        "line": " * @param {Object} submission"
      },
      {
        "lineNumber": 168,
        "line": " *   A submission object."
      },
      {
        "lineNumber": 169,
        "line": " * @param data"
      },
      {
        "lineNumber": 170,
        "line": " *   The full submission data."
      },
      {
        "lineNumber": 171,
        "line": " */"
      },
      {
        "lineNumber": 172,
        "line": "export function checkCalculated(component, submission, rowData) {"
      }
    ],
    "codeParams": [
      "component",
      "submission",
      "rowData"
    ],
    "docParams": [
      "component",
      "submission",
      "data"
    ]
  },
  {
    "name": "checkSimpleConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 185,
        "line": "/**"
      },
      {
        "lineNumber": 186,
        "line": " * Check if a simple conditional evaluates to true."
      },
      {
        "lineNumber": 187,
        "line": " *"
      },
      {
        "lineNumber": 188,
        "line": " * @param condition"
      },
      {
        "lineNumber": 189,
        "line": " * @param condition"
      },
      {
        "lineNumber": 190,
        "line": " * @param row"
      },
      {
        "lineNumber": 191,
        "line": " * @param data"
      },
      {
        "lineNumber": 192,
        "line": " * @returns {boolean}"
      },
      {
        "lineNumber": 193,
        "line": " */"
      },
      {
        "lineNumber": 194,
        "line": "export function checkSimpleConditional(component, condition, row, data) {"
      }
    ],
    "codeParams": [
      "component",
      "condition",
      "row",
      "data"
    ],
    "docParams": [
      "condition",
      "condition",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCustomConditional",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 222,
        "line": "/**"
      },
      {
        "lineNumber": 223,
        "line": " * Check custom javascript conditional."
      },
      {
        "lineNumber": 224,
        "line": " *"
      },
      {
        "lineNumber": 225,
        "line": " * @param component"
      },
      {
        "lineNumber": 226,
        "line": " * @param custom"
      },
      {
        "lineNumber": 227,
        "line": " * @param row"
      },
      {
        "lineNumber": 228,
        "line": " * @param data"
      },
      {
        "lineNumber": 229,
        "line": " * @returns {*}"
      },
      {
        "lineNumber": 230,
        "line": " */"
      },
      {
        "lineNumber": 231,
        "line": "export function checkCustomConditional(component, custom, row, data, form, variable, onError, instance) {"
      }
    ],
    "codeParams": [
      "component",
      "custom",
      "row",
      "data",
      "form",
      "variable",
      "onError",
      "instance"
    ],
    "docParams": [
      "component",
      "custom",
      "row",
      "data"
    ]
  },
  {
    "name": "checkCondition",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 259,
        "line": "/**"
      },
      {
        "lineNumber": 260,
        "line": " * Checks the conditions for a provided component and data."
      },
      {
        "lineNumber": 261,
        "line": " *"
      },
      {
        "lineNumber": 262,
        "line": " * @param component"
      },
      {
        "lineNumber": 263,
        "line": " *   The component to check for the condition."
      },
      {
        "lineNumber": 264,
        "line": " * @param row"
      },
      {
        "lineNumber": 265,
        "line": " *   The data within a row"
      },
      {
        "lineNumber": 266,
        "line": " * @param data"
      },
      {
        "lineNumber": 267,
        "line": " *   The full submission data."
      },
      {
        "lineNumber": 268,
        "line": " *"
      },
      {
        "lineNumber": 269,
        "line": " * @returns {boolean}"
      },
      {
        "lineNumber": 270,
        "line": " */"
      },
      {
        "lineNumber": 271,
        "line": "export function checkCondition(component, row, data, form, instance) {"
      }
    ],
    "codeParams": [
      "component",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "row",
      "data"
    ]
  },
  {
    "name": "checkTrigger",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 286,
        "line": "/**"
      },
      {
        "lineNumber": 287,
        "line": " * Test a trigger on a component."
      },
      {
        "lineNumber": 288,
        "line": " *"
      },
      {
        "lineNumber": 289,
        "line": " * @param component"
      },
      {
        "lineNumber": 290,
        "line": " * @param action"
      },
      {
        "lineNumber": 291,
        "line": " * @param data"
      },
      {
        "lineNumber": 292,
        "line": " * @param row"
      },
      {
        "lineNumber": 293,
        "line": " * @returns {mixed}"
      },
      {
        "lineNumber": 294,
        "line": " */"
      },
      {
        "lineNumber": 295,
        "line": "export function checkTrigger(component, trigger, row, data, form, instance) {"
      }
    ],
    "codeParams": [
      "component",
      "trigger",
      "row",
      "data",
      "form",
      "instance"
    ],
    "docParams": [
      "component",
      "action",
      "data",
      "row"
    ]
  },
  {
    "name": "interpolate",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 358,
        "line": "/**"
      },
      {
        "lineNumber": 359,
        "line": " * Interpolate a string and add data replacements."
      },
      {
        "lineNumber": 360,
        "line": " *"
      },
      {
        "lineNumber": 361,
        "line": " * @param string"
      },
      {
        "lineNumber": 362,
        "line": " * @param data"
      },
      {
        "lineNumber": 363,
        "line": " * @returns {XML|string|*|void}"
      },
      {
        "lineNumber": 364,
        "line": " */"
      },
      {
        "lineNumber": 365,
        "line": "export function interpolate(rawTemplate, data) {"
      }
    ],
    "codeParams": [
      "rawTemplate",
      "data"
    ],
    "docParams": [
      "string",
      "data"
    ]
  },
  {
    "name": "delay",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 863,
        "line": "/**"
      },
      {
        "lineNumber": 864,
        "line": " * Delays function execution with possibility to execute function synchronously or cancel it."
      },
      {
        "lineNumber": 865,
        "line": " *"
      },
      {
        "lineNumber": 866,
        "line": " * @param fn Function to delay"
      },
      {
        "lineNumber": 867,
        "line": " * @param delay Delay time"
      },
      {
        "lineNumber": 868,
        "line": " * @return {*}"
      },
      {
        "lineNumber": 869,
        "line": " */"
      },
      {
        "lineNumber": 870,
        "line": "export function delay(fn, delay = 0, ...args) {"
      }
    ],
    "codeParams": [
      "fn",
      "delay",
      "args"
    ],
    "docParams": [
      "fn",
      "delay"
    ]
  },
  {
    "name": "unfold",
    "filePath": "src/utils/utils.js",
    "lines": [
      {
        "lineNumber": 934,
        "line": "/**"
      },
      {
        "lineNumber": 935,
        "line": " * Retrun provided argument."
      },
      {
        "lineNumber": 936,
        "line": " * If argument is a function, returns the result of a function call."
      },
      {
        "lineNumber": 937,
        "line": " * @param {*} e;"
      },
      {
        "lineNumber": 938,
        "line": " *"
      },
      {
        "lineNumber": 939,
        "line": " * @return {*}"
      },
      {
        "lineNumber": 940,
        "line": " */"
      },
      {
        "lineNumber": 941,
        "line": "export function unfold(e) {"
      }
    ],
    "codeParams": [
      "e"
    ],
    "docParams": [
      "e;"
    ]
  }
]