{
  "type": "File",
  "start": 0,
  "end": 3129,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 104,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3129,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 104,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportDefaultDeclaration",
        "start": 0,
        "end": 3128,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 103,
            "column": 2
          }
        },
        "declaration": {
          "type": "ObjectExpression",
          "start": 15,
          "end": 3127,
          "loc": {
            "start": {
              "line": 1,
              "column": 15
            },
            "end": {
              "line": 103,
              "column": 1
            }
          },
          "properties": [
            {
              "type": "ObjectProperty",
              "start": 19,
              "end": 2008,
              "loc": {
                "start": {
                  "line": 2,
                  "column": 2
                },
                "end": {
                  "line": 65,
                  "column": 1
                }
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 19,
                "end": 23,
                "loc": {
                  "start": {
                    "line": 2,
                    "column": 2
                  },
                  "end": {
                    "line": 2,
                    "column": 6
                  },
                  "identifierName": "form"
                },
                "name": "form"
              },
              "value": {
                "type": "TemplateLiteral",
                "start": 25,
                "end": 2008,
                "loc": {
                  "start": {
                    "line": 2,
                    "column": 8
                  },
                  "end": {
                    "line": 65,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 26,
                    "end": 2007,
                    "loc": {
                      "start": {
                        "line": 2,
                        "column": 9
                      },
                      "end": {
                        "line": 65,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn) { %}\n      <th>\n        {% if (hasAddButton && hasTopSubmit) { %}\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> Add Another\n        </button>\n        {% } %}\n      </th>\n      {% } %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn && hasRemoveButtons) { %}\n      <td>\n        <button type=\"button\" class=\"ui icon button secondary\" ref=\"{{datagridKey}}-removeRow\">\n          <i class=\"{{iconClass('remove-circle')}}\"></i>\n        </button>\n      </td>\n      {% } %}\n    </tr>\n    {% }) %}\n  </tbody>\n  {% if (hasAddButton && hasBottomSubmit) { %}\n  <tfoot>\n    <tr>\n      <td colspan=\"{{numColumns}}\">\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> {{t(component.addAnother || 'Add Another')}}\n        </button>\n      </td>\n    </tr>\n  </tfoot>\n  {% } %}\n</table>\n",
                      "cooked": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn) { %}\n      <th>\n        {% if (hasAddButton && hasTopSubmit) { %}\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> Add Another\n        </button>\n        {% } %}\n      </th>\n      {% } %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn && hasRemoveButtons) { %}\n      <td>\n        <button type=\"button\" class=\"ui icon button secondary\" ref=\"{{datagridKey}}-removeRow\">\n          <i class=\"{{iconClass('remove-circle')}}\"></i>\n        </button>\n      </td>\n      {% } %}\n    </tr>\n    {% }) %}\n  </tbody>\n  {% if (hasAddButton && hasBottomSubmit) { %}\n  <tfoot>\n    <tr>\n      <td colspan=\"{{numColumns}}\">\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> {{t(component.addAnother || 'Add Another')}}\n        </button>\n      </td>\n    </tr>\n  </tfoot>\n  {% } %}\n</table>\n"
                    },
                    "tail": true
                  }
                ]
              }
            },
            {
              "type": "ObjectProperty",
              "start": 2012,
              "end": 3124,
              "loc": {
                "start": {
                  "line": 66,
                  "column": 2
                },
                "end": {
                  "line": 102,
                  "column": 1
                }
              },
              "method": false,
              "shorthand": false,
              "computed": false,
              "key": {
                "type": "Identifier",
                "start": 2012,
                "end": 2016,
                "loc": {
                  "start": {
                    "line": 66,
                    "column": 2
                  },
                  "end": {
                    "line": 66,
                    "column": 6
                  },
                  "identifierName": "html"
                },
                "name": "html"
              },
              "value": {
                "type": "TemplateLiteral",
                "start": 2018,
                "end": 3124,
                "loc": {
                  "start": {
                    "line": 66,
                    "column": 8
                  },
                  "end": {
                    "line": 102,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 2019,
                    "end": 3123,
                    "loc": {
                      "start": {
                        "line": 66,
                        "column": 9
                      },
                      "end": {
                        "line": 102,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n    </tr>\n    {% }) %}\n  </tbody>\n</table>\n",
                      "cooked": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n    </tr>\n    {% }) %}\n  </tbody>\n</table>\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "leadingComments": [],
          "trailingComments": []
        }
      }
    ],
    "directives": []
  },
  "comments": [],
  "tokens": [
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "default",
        "keyword": "default",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "default",
      "start": 7,
      "end": 14,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 15,
      "end": 16,
      "loc": {
        "start": {
          "line": 1,
          "column": 15
        },
        "end": {
          "line": 1,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "form",
      "start": 19,
      "end": 23,
      "loc": {
        "start": {
          "line": 2,
          "column": 2
        },
        "end": {
          "line": 2,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ":",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 23,
      "end": 24,
      "loc": {
        "start": {
          "line": 2,
          "column": 6
        },
        "end": {
          "line": 2,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 25,
      "end": 26,
      "loc": {
        "start": {
          "line": 2,
          "column": 8
        },
        "end": {
          "line": 2,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn) { %}\n      <th>\n        {% if (hasAddButton && hasTopSubmit) { %}\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> Add Another\n        </button>\n        {% } %}\n      </th>\n      {% } %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n      {% if (hasExtraColumn && hasRemoveButtons) { %}\n      <td>\n        <button type=\"button\" class=\"ui icon button secondary\" ref=\"{{datagridKey}}-removeRow\">\n          <i class=\"{{iconClass('remove-circle')}}\"></i>\n        </button>\n      </td>\n      {% } %}\n    </tr>\n    {% }) %}\n  </tbody>\n  {% if (hasAddButton && hasBottomSubmit) { %}\n  <tfoot>\n    <tr>\n      <td colspan=\"{{numColumns}}\">\n        <button class=\"ui button primary\" ref=\"{{datagridKey}}-addRow\">\n          <i class=\"{{iconClass('plus')}}\"></i> {{t(component.addAnother || 'Add Another')}}\n        </button>\n      </td>\n    </tr>\n  </tfoot>\n  {% } %}\n</table>\n",
      "start": 26,
      "end": 2007,
      "loc": {
        "start": {
          "line": 2,
          "column": 9
        },
        "end": {
          "line": 65,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2007,
      "end": 2008,
      "loc": {
        "start": {
          "line": 65,
          "column": 0
        },
        "end": {
          "line": 65,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2008,
      "end": 2009,
      "loc": {
        "start": {
          "line": 65,
          "column": 1
        },
        "end": {
          "line": 65,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "html",
      "start": 2012,
      "end": 2016,
      "loc": {
        "start": {
          "line": 66,
          "column": 2
        },
        "end": {
          "line": 66,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": ":",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2016,
      "end": 2017,
      "loc": {
        "start": {
          "line": 66,
          "column": 6
        },
        "end": {
          "line": 66,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2018,
      "end": 2019,
      "loc": {
        "start": {
          "line": 66,
          "column": 8
        },
        "end": {
          "line": 66,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n<label class=\"control-label\" style=\"\">{{t(component.label)}}</label>\n<table class=\"ui table datagrid-table \n    {{ component.striped ? 'striped' : ''}}\n    {{ component.bordered ? 'celled' : ''}}\n    {{ component.hover ? 'selectable' : ''}}\n    {{ component.condensed ? 'compact' : 'padded'}}\n    \">\n  {% if (hasHeader) { %}\n  <thead>\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <th class=\"{{col.validate && col.validate.required ? 'field-required' : ''}}\">\n        {{ col.hideLabel ? '' : t(col.label || col.title) }}\n        {% if (col.tooltip) { %} <i ref=\"tooltip\" class=\"{{iconClass('question-sign')}} text-muted\" data-title=\"{{col.tooltip}}\"></i>{% } %}\n      </th>\n      {% } %}\n      {% }) %}\n    </tr>\n  </thead>\n  {% } %}\n  <tbody>\n    {% rows.forEach(function(row) { %}\n    <tr>\n      {% component.components.forEach(function(col) { %}\n      {% if (visibleColumns[col.key]) { %}\n      <td ref=\"{{datagridKey}}\">\n        {{row[col.key]}}\n      </td>\n      {% } %}\n      {% }) %}\n    </tr>\n    {% }) %}\n  </tbody>\n</table>\n",
      "start": 2019,
      "end": 3123,
      "loc": {
        "start": {
          "line": 66,
          "column": 9
        },
        "end": {
          "line": 102,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3123,
      "end": 3124,
      "loc": {
        "start": {
          "line": 102,
          "column": 0
        },
        "end": {
          "line": 102,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3124,
      "end": 3125,
      "loc": {
        "start": {
          "line": 102,
          "column": 1
        },
        "end": {
          "line": 102,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3126,
      "end": 3127,
      "loc": {
        "start": {
          "line": 103,
          "column": 0
        },
        "end": {
          "line": 103,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3127,
      "end": 3128,
      "loc": {
        "start": {
          "line": 103,
          "column": 1
        },
        "end": {
          "line": 103,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3129,
      "end": 3129,
      "loc": {
        "start": {
          "line": 104,
          "column": 0
        },
        "end": {
          "line": 104,
          "column": 0
        }
      }
    }
  ]
}